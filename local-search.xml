<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/04/15/hello-world/"/>
    <url>/2020/04/15/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>我的手机壁纸系</title>
    <link href="/2020/04/14/mobile-wallpaper/"/>
    <url>/2020/04/14/mobile-wallpaper/</url>
    
    <content type="html"><![CDATA[<p>记录我的手机桌面，收藏以备用！</p><a id="more"></a><ul><li>4.12</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/3001438-55de6b78e8c3760c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" srcset="/img/loading.gif" alt="桌面1"></p><p><img src="https://upload-images.jianshu.io/upload_images/3001438-9ca5dbb4e0800490.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" srcset="/img/loading.gif" alt="桌面2"></p><p><img src="https://upload-images.jianshu.io/upload_images/3001438-25c1ab13fe816597.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" srcset="/img/loading.gif" alt="壁纸原图"></p><ul><li>4.13</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/3001438-92c0b7753e5e6b49.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" srcset="/img/loading.gif" alt="桌面1"></p><p><img src="https://upload-images.jianshu.io/upload_images/3001438-8de0740715352959.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" srcset="/img/loading.gif" alt="桌面2"></p><p><img src="https://upload-images.jianshu.io/upload_images/3001438-daadea1f1b84bb68.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50" srcset="/img/loading.gif" alt="壁纸原图"></p>]]></content>
    
    
    
    <tags>
      
      <tag>壁纸</tag>
      
      <tag>美化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在 keil 中使用 Astyle 格式化代码</title>
    <link href="/2020/04/14/keil-Astyle/"/>
    <url>/2020/04/14/keil-Astyle/</url>
    
    <content type="html"><![CDATA[<p>​    Astyle 的全称是Artistic Style的简称，是一个开源的源代码格式化工具，可以对C，C++，C#以及<a href="https://lib.csdn.net/base/javase" target="_blank" rel="noopener">Java</a>等编程语言的源代码进行缩进、格式化、美化。<br>Home Page: <a href="https://astyle.sourceforge.net/" target="_blank" rel="noopener">https://astyle.sourceforge.net/</a><br>Project Page: <a href="https://sourceforge.net/projects/astyle/" target="_blank" rel="noopener">https://sourceforge.net/projects/astyle/</a></p><p>在Keil μVision中集成Astyle（以下Keil μVison5为例），可以将凌乱的代码变得整齐起来，方便阅读。</p><ol><li>下载Astyle，解压到任意位置（Astyle为绿色软件，无需安装）</li></ol><p><img src="https://note.youdao.com/yws/public/resource/15909f20655397a9e2beb64403f41e45/12AFB017E290410EBAFD9449EB25AF83" srcset="/img/loading.gif" alt="AStyle_2.02.1_windows.zip"></p><p><img src="https://note.youdao.com/yws/public/resource/15909f20655397a9e2beb64403f41e45/BACFAE738C0D4B5EB1A950A0EA4E345C" srcset="/img/loading.gif" alt="img"></p><ol><li><p>keil µVision5中单击Tools菜单—Customize Tools Menu</p><p><img src="https://note.youdao.com/yws/public/resource/15909f20655397a9e2beb64403f41e45/9582923B342143FB8ACB3722C47C42AB" srcset="/img/loading.gif" alt=""></p></li><li><p>添加Astyle All Files 和Astyle Current File菜单(自定义菜单名，可以随便起名)这里添加了两个菜单，分别是格式化当前文件和格式化project中的所有文件Command命令：在刚才解压的位置选择Astyle.exe。</p><p>Arguments：</p><p>Astyle Current File菜单填写 <code>!E</code></p><p>Astyle All Files菜单填写 <code>&quot;$E*.c&quot; &quot;$E*.h&quot;</code><br><img src="https://note.youdao.com/yws/public/resource/15909f20655397a9e2beb64403f41e45/10358AF584A14E4B9C56BF8C0145DA57" srcset="/img/loading.gif" alt="img"></p></li></ol><p><img src="https://note.youdao.com/yws/public/resource/15909f20655397a9e2beb64403f41e45/32094915EF604CE18E6B68E0CDAC1F11" srcset="/img/loading.gif" alt="img">)<img src="https://note.youdao.com/yws/public/resource/15909f20655397a9e2beb64403f41e45/B3E57A456EBD48C5A974259CBA15615B" srcset="/img/loading.gif" alt="img"></p><hr><p>使用方式如下：</p><p><img src="https://note.youdao.com/yws/public/resource/15909f20655397a9e2beb64403f41e45/5A52496B528E4CF4B49C242B8E74799F" srcset="/img/loading.gif" alt="img"></p><p>使用效果很不错，代码瞬间变得整齐了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>嵌入式开发</tag>
      
      <tag>Keil</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>蓝桥杯单片机设计与开发</title>
    <link href="/2020/04/14/lanqiao-single-chip-microcomputer/"/>
    <url>/2020/04/14/lanqiao-single-chip-microcomputer/</url>
    
    <content type="html"><![CDATA[<h3 id="蓝桥杯单片机设计与开发实验例程"><a href="#蓝桥杯单片机设计与开发实验例程" class="headerlink" title="蓝桥杯单片机设计与开发实验例程"></a>蓝桥杯单片机设计与开发实验例程</h3><table><thead><tr><th>常用模块</th><th>LED</th><th>按键</th><th>数码管</th><th>DS18B20</th><th>定时器</th></tr></thead><tbody><tr><td>备注</td><td>亮状态控制</td><td>独立按键/矩阵按键</td><td>动态显示数据</td><td>根据提供的驱动，编写初始化及读取温度函数即可</td><td>辅助，但必会</td></tr></tbody></table><a id="more"></a><blockquote><p>1.LED闪烁实验</p></blockquote><ul><li>实验效果：LED以0.2S为间隔闪烁</li></ul><pre><code class="c">#include &quot;reg52.h&quot; void delay(void)    //延时函数{    unsigned char i,j,k;    for(i=0; i&lt;20; i++)    {        for(j=0; j&lt;20; j++)        {            for(k=0; k&lt;248; k++);        }    } }void main(void){    while(1)    {        P2 = ((P2&amp;0x1f)|0x80);        P0 = 0xff;  //LED熄灭        P2 &amp;= 0x1f;        delay();        P2 = ((P2&amp;0x1f)|0x80);        P0 = 0x00;  //LED点亮        P2 &amp;= 0x1f;        delay();    }}</code></pre><blockquote><p>2.按键控制（独立按键）</p></blockquote><ul><li>实验效果：按下不同的按键，LED有不同的现象</li></ul><pre><code class="c">#include &quot;reg52.h&quot;  //定义51单片机特殊功能寄存器/** 独立按键接口 */sbit S7  = P3^0;sbit S6  = P3^1;sbit S5  = P3^2;sbit S4  = P3^3;//主函数void main(void){      while(1)  {      if(S7 == 0)      {          P2 = ((P2&amp;0x1f)|0x80);          P0 = 0xff;  //关闭所有LED          P2 &amp;= 0x1f;      }      if(S6 == 0)      {          P2 = ((P2&amp;0x1f)|0x80);          P0 = 0x00;  //打开所有LED          P2 &amp;= 0x1f;      }      if(S5 == 0)      {          P2 = ((P2&amp;0x1f)|0xa0);          P0 &amp;= ~(0x01&lt;&lt;4);  //Close          P2 &amp;= 0x1f;      }      if(S4 == 0)      {          P2 = ((P2&amp;0x1f)|0xa0);          P0 |= (0x01&lt;&lt;4); //Open          P2 &amp;= 0x1f;      }  }}</code></pre><blockquote><p>3.数码管控装置</p></blockquote><p>实验效果：所有的数码管显示的相同的数据</p><pre><code class="c">#include &quot;reg52.h&quot;  //定义51单片机特殊功能寄存器code unsigned char tab[] ={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};void delay(void)    //延时函数{    unsigned char i,j,k;    for(i=0; i&lt;20; i++)    {        for(j=0; j&lt;20; j++)        {            for(k=0; k&lt;248; k++);        }    } }void main(void){     unsigned char i;    while(1)    {        for(i=0;i&lt;10;i++)        {            //段码：确定是哪一位数码管亮              P2=(P2&amp;0x1f|0xc0);            P0=0xff;            P2=0x1f;              //位码：确定数码管显示的内容            P2=(P2&amp;0x1f|0xe0);            P0=tab[i];            P2=0x1f;            delay();        }    }}</code></pre><blockquote><p>4.定时器的使用</p></blockquote><p>配置定时器0，工作方式是1，并开启中断；</p><ul><li>定时器模式配置</li></ul><pre><code class="c">TMOD |= 0x01;  //配置定时器工作模式TH0 = (65536-2000)/256;TL0 = (65536-2000)%256; //定时器初始值  EA = 1; //开启总中断，只有开启了总中断，其他中断才有效ET0 = 1;  //打开定时器0中断TR0 = 1;  //启动定时器0，即定时器0开始计数</code></pre><ul><li>中断服务函数</li></ul><pre><code class="c">void isr_timer_0(void)  interrupt 1  //默认中断优先级 1{    TH0 = (65536-2000)/256;    TL0 = (65536-2000)%256;  //定时器重载     //put your code here}</code></pre><ul><li>例程之基于定时器的数码管时钟</li></ul><pre><code class="c">#include &lt;reg51.h&gt;/***************数码管段码    0    1    2    3    4    5    6    7    8    9   灭   - */unsigned char code tab[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff,0xbf};unsigned char dspbuf[8]= {10,10,10,10,10,10,10,10};    //数码管显示缓冲区unsigned char dspcom=0;    //数码管动态刷新时位置unsigned char flag_2ms=0;    //数码管刷新标志位unsigned int second=30,minute=15,hour=17;        //初始化时间void display();//主函数void main(){    //定时器0初始化    TMOD |= 0x01;    TH0 = (65536-2000)/256;    TL0 = (65536-2000)/256;    EA=1;    //开启总中断    ET0=1;    //开启定时器0中断    TR0=1;    //启动定时器0    while(1)    {        if(flag_2ms == 1)        {            display();            flag_2ms=0;        }        //更新显示数据        dspbuf[0] = hour/10;        dspbuf[1] = hour%10;        dspbuf[2] = 11;        dspbuf[3] = minute/10;        dspbuf[4] = minute%10;        dspbuf[5] = 11;        dspbuf[6] = second/10;        dspbuf[7] = second%10;    }}//定时器0中断服务函数void timer0_int() interrupt 1{    //刚开始数码管时间无法更新，保持初始值；    //原因：char最大是255，根本不会达到500，当然不会更新时间了，嘤嘤嘤！//    static unsigned char counter=0;        static unsigned int counter=0;    //定时器重载    TH0=(65536-2000)/256;    TL0=(65536-2000)/256;    //2ms执行一次    counter++;    flag_2ms=1;    if(counter==500)    //ls时间    {        counter=0;        second++;        if(second==60)        {            second=0;            minute++;            if(minute==60)            {                minute=0;                hour++;                if(hour==24)                {                    hour=0;                }            }                    }    }    }//数码管动态显示函数void display(){    //用于消除数码管闪烁    P2=(P2&amp;0x1f|0xe0);    P0=tab[10];    P2=0x1f;    //数码管位码    P2 = (P2 &amp; 0x1f) | 0xc0;    P0 = (0x01&lt;&lt;dspcom);    P2 = P2 &amp; 0x1f;    //数码管段码    P2 = (P2 &amp; 0x1f) | 0xe0;    P0 = tab[dspbuf[dspcom]];    P2 = P2 &amp; 0x1f;    dspcom++;    if(dspcom == 8)    {        dspcom=0;    }}</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>学习 蓝桥杯单片机</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C++-color-draw</title>
    <link href="/2020/04/14/C-color-draw/"/>
    <url>/2020/04/14/C-color-draw/</url>
    
    <content type="html"><![CDATA[<p>EasyX 是针对C++的图形库，可以帮助C语言初学者快速上手图形和游戏编程。  </p><a id="more"></a><p>比如，可以用 VC + EasyX 很快的用几何图形画一个房子，或者一辆移动的小车，可以编写俄罗斯方块、贪吃蛇、黑白棋等小游戏，可以练习图形学的各种算法，等等。总之，这是一个很强大的图形库。  </p><p><strong>通过此库设计了一个颜色画板！</strong></p><blockquote><p>代码如下：  </p></blockquote><pre><code class="c++">// ***********************************************************************// Assembly         :// Author           : qin// Created          : 07-18-2016//// Last Modified By : qin// Last Modified On : 08-14-2016// ***********************************************************************// &lt;copyright file=&quot;demo.cpp&quot; company=&quot;&quot;&gt;//     Copyright (c) . All rights reserved.// &lt;/copyright&gt;// &lt;summary&gt;&lt;/summary&gt;// ***********************************************************************#include&lt;graphics.h&gt;#include &lt;iostream&gt;using namespace std;void box();//函数声明int fill();//函数声明/// &lt;summary&gt;/// Mains this instance./// &lt;/summary&gt;/// &lt;returns&gt;int.&lt;/returns&gt;int main(void){    initgraph(640, 480);    box();    fill();    closegraph();    return 0;}/// &lt;summary&gt;/// 调用画格子和调色板函数./// &lt;/summary&gt;void box()//画格子及调色板函数{    int color[9] = { BLACK, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN, YELLOW, WHITE };//调色板拥有的颜色，可以自己增加    setlinecolor(LIGHTGRAY);//设置格子边框颜色    for (int i = 0; i &lt;= 16; i++)//画格子    {        line(i * 30 + 80, 40, i * 30 + 80, 280);//画17条竖线        if (i &lt;= 8)            line(80, i * 30 + 40, 560, i * 30 + 40);//画9条横线    }    for (int i = 0; i &lt;= 9; i++)//画调色板的格子    {        line(i * 50 + 95, 350, i * 50 + 95, 400);//画10条竖线        if (i &lt; 2)        {            line(95, i * 50 + 350, 545, i * 50 + 350);//画2条横线        }    }    for (int i = 0; i &lt; 9; i++)//填充调色板格子    {        setfillcolor(color[i]);//设置填充颜色        floodfill(i * 50 + 100, 375, LIGHTGRAY);//填充颜色    }}/// &lt;summary&gt;/// 鼠标控制填色函数./// &lt;/summary&gt;/// &lt;returns&gt;int.&lt;/returns&gt;int fill(){    MOUSEMSG m;    int whichcolor = BLACK;//颜色值,默认黑色    while (true)    {        m = GetMouseMsg();        if (m.uMsg == WM_LBUTTONDOWN)//判断左键是否按下        {            if (m.y &gt;= 350 &amp;&amp; m.y &lt;= 400 &amp;&amp; m.x &gt;= 145 &amp;&amp; m.x &lt;=545)//判断鼠标是否位于调色板区域            {                whichcolor = getpixel(m.x, m.y);//返回该点的颜色            }            if (m.y &gt;= 40 &amp;&amp; m.y &lt;= 280 &amp;&amp; m.x &gt;= 110 &amp;&amp; m.x &lt;= 560)//判断鼠标是否位于待填色格子区域            {                setfillcolor(whichcolor);//设置填充颜色                floodfill(m.x, m.y, LIGHTGRAY);//填充颜色            }        }        if (m.uMsg == WM_RBUTTONDOWN)//判断是否按下右键        {            TCHAR s[] = _T(&quot;即将退出,请稍后......&quot;);            settextcolor(LIGHTBLUE);            outtextxy(320 - textwidth(s)/2 , 315 - textheight(s)/2, s);            Sleep(1000);            for (int j = 0; j &lt; 600; j++)            {                outtextxy(j, 100, s);                Sleep(20);            }            return 0;//结束函数        }                }}</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>C++</tag>
      
      <tag>EasyX</tag>
      
      <tag>编程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Valine-Admin 后台搭建</title>
    <link href="/2020/04/14/Valine-Admin/"/>
    <url>/2020/04/14/Valine-Admin/</url>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/DesertsP/Valine-Admin" target="_blank" rel="noopener">Valine Admin</a> 是 Valine 评论系统的扩展和增强，主要实现评论邮件通知、评论管理、垃圾评论过滤等功能。</p></blockquote><a id="more"></a><p><a href="https://github.com/DesertsP/Valine-Admin" target="_blank" rel="noopener">Valine Admin</a> 支持完全自定义的邮件通知模板。基于 Akismet API 实现准确的垃圾评论过滤。此外，使用云函数等技术解决了免费版云引擎休眠问题，支持云引擎自动唤醒，漏发邮件自动补发。兼容云淡风轻及Deserts维护的多版本Valine。</p><h2 id="快速部署"><a href="#快速部署" class="headerlink" title="快速部署"></a>快速部署</h2><ul><li>在 <a href="https://leancloud.cn/dashboard/#/apps" target="_blank" rel="noopener">Leancloud</a> 云引擎设置界面，填写代码库并保存：<a href="https://github.com/DesertsP/Valine-Admin.git" target="_blank" rel="noopener">https://github.com/DesertsP/Valine-Admin.git</a><br><img src="/img/1586763962331.jpg" srcset="/img/loading.gif" alt="设置仓库"></li><li>在设置页面，设置环境变量以及 Web 二级域名。<br><img src="/img/1586764335298.jpg" srcset="/img/loading.gif" alt="环境变量"></li></ul><table><thead><tr><th>变量</th><th>示例</th><th>说明</th></tr></thead><tbody><tr><td>SITE_NAME</td><td>Deserts</td><td>[必填]博客名称</td></tr><tr><td>SITE_URL</td><td><a href="https://deserts.io/" target="_blank" rel="noopener">https://deserts.io</a></td><td>[必填]首页地址</td></tr><tr><td><strong>SMTP_SERVICE</strong></td><td>QQ</td><td>[新版支持]邮件服务提供商，支持 QQ、163、126、Gmail 以及 <a href="https://nodemailer.com/smtp/well-known/#supported-services" target="_blank" rel="noopener">更多</a></td></tr><tr><td>SMTP_USER</td><td><a href="mailto:xxxxxx@qq.com">xxxxxx@qq.com</a></td><td>[必填]SMTP登录用户</td></tr><tr><td>SMTP_PASS</td><td>ccxxxxxxxxch</td><td>[必填]SMTP登录密码（QQ邮箱需要获取独立密码）</td></tr><tr><td>SENDER_NAME</td><td>Deserts</td><td>[必填]发件人</td></tr><tr><td>SENDER_EMAIL</td><td><a href="mailto:xxxxxx@qq.com">xxxxxx@qq.com</a></td><td>[必填]发件邮箱</td></tr><tr><td>ADMIN_URL</td><td><a href="https://xxx.leanapp.cn/" target="_blank" rel="noopener">https://xxx.leanapp.cn/</a></td><td>[建议]Web主机-二级域名，用于自动唤醒</td></tr><tr><td>BLOGGER_EMAIL</td><td><a href="mailto:xxxxx@gmail.com">xxxxx@gmail.com</a></td><td>[可选]博主通知收件地址，默认使用SENDER_EMAIL</td></tr><tr><td>AKISMET_KEY</td><td>xxxxxxxxxxxx</td><td>[可选]Akismet Key 用于垃圾评论检测，设为MANUAL_REVIEW开启人工审核，留空不使用反垃圾</td></tr></tbody></table><p><strong>以上必填参数请务必正确设置。</strong></p><ul><li><p>二级域名用于评论后台管理，如<a href="https://deserts.leanapp.cn/" target="_blank" rel="noopener">https://deserts.leanapp.cn</a> 。<br><img src="/img/1586764344136.jpg" srcset="/img/loading.gif" alt="二级域名"></p></li><li><p>切换到部署标签页，分支使用master，点击部署即可<br><img src="/img/1586764501029.jpg" srcset="/img/loading.gif" alt="一键部署"></p></li><li><p>第一次部署需要花点时间。<br><img src="/img/1586764523793.jpg" srcset="/img/loading.gif" alt="部署过程"></p></li><li><p>评论管理。访问设置的二级域名<code>https://二级域名.leanapp.cn/sign-up</code>，注册管理员登录信息，如：<a href="https://deserts.leanapp.cn/sign-up" target="_blank" rel="noopener">https://deserts.leanapp.cn/sign-up</a><br><img src="/img/1586764674233.jpg" srcset="/img/loading.gif" alt="管理员注册"></p></li></ul><blockquote><p>注：使用原版Valine如果遇到注册页面不显示直接跳转至登录页的情况，请手动删除_User表中的全部数据。</p></blockquote><p>此后，可以通过<code>https://二级域名.leanapp.cn/</code>管理评论。</p><h2 id="定时任务设置"><a href="#定时任务设置" class="headerlink" title="定时任务设置"></a>定时任务设置</h2><p>目前实现了两种云函数定时任务：</p><ul><li>自动唤醒，定时访问Web APP二级域名防止云引擎休眠；</li><li>每天定时检查24小时内漏发的邮件通知。</li></ul><p>进入云引擎-定时任务中，创建定时器，创建两个定时任务。</p><p>选择self-wake云函数，Cron表达式为<code>0 0/30 7-23 * * ?</code>，表示每天早6点到晚23点每隔30分钟访问云引擎，<code>ADMIN_URL</code>环境变量务必设置正确：<br><img src="/img/1586764761081.jpg" srcset="/img/loading.gif" alt=""></p><p>选择resend-mails云函数，Cron表达式为<code>0 0 8 * * ?</code>，表示每天早8点检查过去24小时内漏发的通知邮件并补发：<br><img src="/img/1586764769756.jpg" srcset="/img/loading.gif" alt="通知检查"></p><p><strong>添加定时器后记得点击启动方可生效。</strong></p><p><strong>至此，Valine Admin 已经可以正常工作，更多<a href="https://github.com/DesertsP/Valine-Admin#至此valine-admin-已经可以正常工作更多以下是可选的进阶配置" target="_blank" rel="noopener">可选的进阶配置</a>查看原文介绍。</strong></p>]]></content>
    
    
    
    <tags>
      
      <tag>Valine</tag>
      
      <tag>Valine-Admin</tag>
      
      <tag>网站开发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在 Gridea 中添加 Valine 评论系统</title>
    <link href="/2020/04/12/use-Valine-in-Gridea/"/>
    <url>/2020/04/12/use-Valine-in-Gridea/</url>
    
    <content type="html"><![CDATA[<p>Valine - 一款快速、简洁且高效的无后端评论系统。</p><a id="more"></a><p> Gridea 提供了两个评论系统，Gitalk 和 Disqus。Gitalk 需要使用 Github 账号登录，对于没Github 账号的人来说不太方便，Disqus 目前在国内不可用。对比了可用于静态博客的国内评论系统，最终选用了 Valine。</p><h2 id="Valine-特性👇"><a href="#Valine-特性👇" class="headerlink" title="Valine 特性👇"></a>Valine 特性👇</h2><ul><li>快速</li><li>安全</li><li>Emoji 😉</li><li>无后端实现</li><li>MarkDown 全语法支持</li><li>轻量易用(~15kb gzipped)</li><li>文章阅读量统计 v1.2.0+</li></ul><h2 id="快速上手-Valine"><a href="#快速上手-Valine" class="headerlink" title="快速上手 Valine"></a>快速上手 Valine</h2><h3 id="获取-APPID-和-APPKey"><a href="#获取-APPID-和-APPKey" class="headerlink" title="获取 APPID 和 APPKey"></a>获取 <strong>APPID</strong> 和 <strong>APPKey</strong></h3><p>Valine 是基于 <a href="https://www.leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a> 开发的，所以需要注册账号来使用。首先登录或注册 <a href="https://www.leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a>, 然后进入控制台后点击左下角创建应用：</p><p><img src="/img/1586595020015.jpg" srcset="/img/loading.gif" alt=""></p><p>进入刚刚创建的应用，选择左下角的设置&gt;应用 Keys，然后就能看到你的 <strong>APPID</strong> 和 <strong>APPKey</strong> 了：<br><img src="/img/1586595106836.jpg" srcset="/img/loading.gif" alt=""></p><h3 id="在网页中插入-Valine"><a href="#在网页中插入-Valine" class="headerlink" title="在网页中插入 Valine"></a>在网页中插入 Valine</h3><p>确认你是用的是哪个模板（我使用的是 Notes），然后在 Gridea theme 文件夹中找到相应的模板，并在 <code>head.ejs</code> 中引入</p><pre><code class="javascript">&lt;script src=&#39;//unpkg.com/valine/dist/Valine.min.js&#39;&gt;&lt;/script&gt;</code></pre><p><img src="/img/1586595765846.jpg" srcset="/img/loading.gif" alt=""><br>在文章下面添加 Valine 的评论框，在 <code>post.ejs</code> 中插入以下代码。修改初始化对象中的 <strong>appId</strong> 和 <strong>appKey</strong> 的值为上面刚刚获取到的值即可。更多信息请查看<a href="https://valine.js.org/configuration.html" target="_blank" rel="noopener">配置项</a></p><pre><code class="html">&lt;div id=&quot;vcomments&quot;&gt;&lt;/div&gt;&lt;script&gt;    new Valine({        el: &#39;#vcomments&#39;,        appId: &#39;&lt;API_ID&gt;&#39;,        appKey: &#39;&lt;API_Key&gt;&#39;    })&lt;/script&gt;</code></pre><p><img src="/img/1586596027242.jpg" srcset="/img/loading.gif" alt=""><br><img src="/img/1586596324924.jpg" srcset="/img/loading.gif" alt=""><br>打开文章详情页，显示评论框就成功了。<br><img src="/img/1586596974577.jpg" srcset="/img/loading.gif" alt=""><br>评论可以在  <a href="https://www.leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a> 的后台进行管理。<br><img src="/img/1586596674976.jpg" srcset="/img/loading.gif" alt=""><br>但这样管理并不理想，下一部分，使用 Valine-Admin 来对评论进行管理。</p><blockquote><p><a href="https://github.com/DesertsP/Valine-Admin" target="_blank" rel="noopener">Valine Admin</a>  是 <a href="https://deserts.io/diy-a-comment-system/" target="_blank" rel="noopener">Valine 评论系统</a>的扩展和增强，主要实现评论邮件通知、评论管理、垃圾评论过滤等功能。支持完全自定义的邮件通知模板。</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>Gridea</tag>
      
      <tag>Valine</tag>
      
      <tag>网站开发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello Gridea</title>
    <link href="/2018/12/12/hello-gridea/"/>
    <url>/2018/12/12/hello-gridea/</url>
    
    <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意… … </p><a id="more"></a><p><a href="https://github.com/getgridea/gridea" target="_blank" rel="noopener">Github</a><br><a href="https://gridea.dev/" target="_blank" rel="noopener">Gridea 主页</a><br><a href="http://fehey.com/" target="_blank" rel="noopener">示例网站</a></p><h2 id="特性👇"><a href="#特性👇" class="headerlink" title="特性👇"></a>特性👇</h2><p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作  </p><p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片  </p><p>🏷️  你可以对文章进行标签分组  </p><p>📋  你可以自定义菜单，甚至可以创建外部链接菜单  </p><p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端  </p><p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台  </p><p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk" target="_blank" rel="noopener">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS" target="_blank" rel="noopener">DisqusJS</a> 评论系统  </p><p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong>  </p><p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力  </p><p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步  </p><p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p><p>未来，它一定会成为你离不开的伙伴</p><p>尽情发挥你的才华吧！</p><p>😘 Enjoy~</p>]]></content>
    
    
    
    <tags>
      
      <tag>Gridea</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
